name: CI

on:
  push:
  pull_request:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  # Enforces the consistency of code formatting using `.editorconfig` and the `dotnet-format` tool.
  check-format:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET SDK v6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Check format
        run: dotnet format --verify-no-changes

  Consul:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    strategy:
      matrix:
        consul: [1.6.10, 1.7.14, 1.8.19, 1.9.17, 1.10.12, 1.11.11, 1.12.9, 1.13.7, 1.14.5, 1.15.1]
        framework: [net461, netcoreapp2.1, netcoreapp3.1, net5.0, net6.0]
        os: [ubuntu-18.04, windows-2019, macos-10.15]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET Core SDK v2.1.x
        if: matrix.framework == 'netcoreapp2.1'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 2.1.x
      - name: Setup .NET Core SDK v3.1.x
        if: matrix.framework == 'netcoreapp3.1'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
      - name: Setup .NET SDK v5.0.x
        if: matrix.framework == 'net5.0'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 5.0.x
      - name: Setup .NET SDK v6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Download Consul
        shell: bash
        run: |
          cd Consul.Test
          SYSTEM=$(uname | sed 's/MINGW.*/windows/' | tr A-Z a-z)
          curl -sSL https://releases.hashicorp.com/consul/${{ matrix.consul }}/consul_${{ matrix.consul }}_${SYSTEM}_amd64.zip -o consul.zip
          unzip consul.zip
          rm consul.zip
      - name: Build
        run: dotnet build Consul.Test --configuration=Release --framework=${{ matrix.framework }}
      - name: Run tests
        shell: bash
        run: |
          ./Consul.Test/consul agent -dev -config-file Consul.Test/test_config.json -log-file consul.log >consul-stdout.log 2>consul-stderr.log &
          dotnet test Consul.Test --configuration=Release --logger "GitHubActions;report-warnings=false" --no-build -v=Normal --framework=${{ matrix.framework }}
      - name: Upload Consul logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: consul-logs-${{ matrix.consul }}-${{ matrix.framework }}-${{ matrix.os }}
          path: consul*.log
